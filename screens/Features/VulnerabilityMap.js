import React, {useState, useEffect, useRef, useContext} from 'react';
import {
  View,
  Image,
  TouchableOpacity,
  TextInput,
  Text,
  StyleSheet,
  KeyboardAvoidingView,
  Alert,
  FlatList,
  TouchableHighlight,
} from 'react-native';
import {
  createNativeStackNavigator,
  Header,
} from '@react-navigation/native-stack';
import {NavigationContainer} from '@react-navigation/native';
import {useNavigation} from '@react-navigation/native';
import {CommonActions} from '@react-navigation/native';
import {UserContext} from '../../provider/UserProvider';
import Icon from 'react-native-vector-icons/FontAwesome';
import {SafeAreaView} from 'react-native-safe-area-context';
import {format, formatDistance, formatRelative, subDays} from 'date-fns';
import {Dimensions} from 'react-native';
import MapView, {
  PROVIDER_GOOGLE,
  AnimatedRegion,
  Animated,
  Marker,
  Circle,
  TYPE_MAPS,
  Callout,
} from 'react-native-maps';

function VulnerabilityMap() {
  const [isLoading, setLoading] = useState(true);
  const context = useContext(UserContext);
  const barangayLoc = context.brgy;
  const mapView = useRef(null);
  const [region, setRegion] = useState({
    longitude: 121.085039,
    latitude: 14.615522,
    latitudeDelta: 0.0015,
    longitudeDelta: 0.0015,
  });

  const [location, setLocation] = useState([]);
  console.log(barangayLoc);

  const animateMap = () => {
    mapView.current.animateToRegion(
      {
        // Takes a region object as parameter
        longitude: 121.085039,
        latitude: 14.615522,
        latitudeDelta: 0.006,
        longitudeDelta: 0.006,
      },
      1000,
    );
  };

  const animateMapOut = () => {
    mapView.current.animateToRegion(
      {
        // Takes a region object as parameter
        longitude: 121.085039,
        latitude: 14.615522,
        latitudeDelta: 0.015,
        longitudeDelta: 0.015,
      },
      1000,
    );
  };

  const animateMapUndo = () => {
    mapView.current.animateToRegion(
      {
        // Takes a region object as parameter
        longitude: 121.085039,
        latitude: 14.615522,
        latitudeDelta: 0.006,
        longitudeDelta: 0.006,
      },
      1000,
    );
  };

  useEffect(() => {
    fetch('https://kabisigapp.com/api/vulnerablearea')
      .then(response => response.json())
      .then(json => {
        setLocation(json);
      })
      .catch(error => {
        Alert.alert('Error', 'There is an error fetching data.');
      })
      .finally(() => setLoading(false));
  }, []);
  return (
    <SafeAreaView>
      <View style={styles.container}>
        <MapView
          //provider={PROVIDER_GOOGLE}
          style={styles.map}
          region={region}
          ref={mapView}
          onRegionChangeComplete={region => setRegion(region)}>
          {location.map(data => {
            console.log(data);
            if (data.degree == 'H') {
              return (
                <Circle
                  key={data.id}
                  center={{
                    latitude: parseFloat(data.vulArea_lat),
                    longitude: parseFloat(data.vulArea_lng),
                  }}
                  radius={90}
                  strokeWidth={1}
                  strokeColor={'rgba(255, 0, 0, 0.5)'}
                  fillColor={'rgba(255, 0, 0, 0.5)'}></Circle>
              );
            } else {
              return (
                <Circle
                  key={data.id}
                  center={{
                    latitude: parseFloat(data.vulArea_lat),
                    longitude: parseFloat(data.vulArea_lng),
                  }}
                  radius={90}
                  strokeWidth={1}
                  strokeColor={'rgba(255,165,0, 0.5)'}
                  fillColor={'rgba(255,165,0, 0.5)'}
                />
              );
            }
          })}
        </MapView>

        <View
          style={{
            flexDirection: 'column',
            alignSelf: 'flex-end',
            position: 'absolute',
            // marginRight: 10,
            padding: 10,
            bottom: Dimensions.get('window').height / 5,
          }}>
          <TouchableOpacity
            style={{
              borderRadius:
                Math.round(
                  Dimensions.get('window').width +
                    Dimensions.get('window').height,
                ) / 2,
              width: 50,
              height: 50,
              backgroundColor: '#004F91',
              justifyContent: 'center',
              alignItems: 'center',
            }}
            onPress={animateMap}>
            <Icon name="plus" color={'#fff'} size={24} />
          </TouchableOpacity>
          <TouchableOpacity
            style={{
              borderRadius:
                Math.round(
                  Dimensions.get('window').width +
                    Dimensions.get('window').height,
                ) / 2,
              width: 50,
              height: 50,
              backgroundColor: '#004F91',
              justifyContent: 'center',
              alignItems: 'center',
            }}
            onPress={animateMapOut}>
            <Icon name="minus" color={'#fff'} size={24} />
          </TouchableOpacity>
        </View>
        <View
          style={{
            position: 'absolute',
            bottom: Dimensions.get('window').height / 10,
            height: 80,
            flex: 1,
            justifyContent: 'center',
            alignItems: 'center',
            flexDirection: 'row',
            backgroundColor: 'white',
            opacity: 0.8,
            paddingRight: 30,
            paddingLeft: 30,
          }}>
          <View
            style={{
              borderRadius: 100,
              width: 50,
              height: 50,
              backgroundColor: 'rgba(255, 0, 0, 0.5)',
            }}></View>
          <Text style={{color: 'black', fontWeight: 'bold', marginRight: 30}}>
            High
          </Text>
          <View
            style={{
              borderRadius: 100,
              width: 50,
              height: 50,
              backgroundColor: 'rgba(255,165,0, 0.5)',
            }}></View>
          <Text style={{color: 'black', fontWeight: 'bold'}}>Medium</Text>
        </View>
      </View>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    ...StyleSheet.absoluteFillObject,
    height: Dimensions.get('window').height,
    width: Dimensions.get('window').width,
    justifyContent: 'flex-end',
    alignItems: 'center',
  },
  map: {
    ...StyleSheet.absoluteFillObject,
  },
});

export default VulnerabilityMap;
